"use strict";
//========================================
//====== Object Oriented Programming =====
//========================================
// OOP      -> A programming paradigm that organize and models software.
// Paradigm -> The style used to write and organize code.
// Building Blocks of OOP
// -----------------------
//-> Inheritence
//-> Polymorphism
//-> Abstraction
//-> Encapsulation
// Object-oriented programming paradigms
// ======================================
// Procedural Programming
//---------------------------
// Procedural programming is a coding approach that organizes a computer program into a set of structured procedures or functions. These procedures consist of a series of well-defined steps or instructions that are executed sequentially. However, it may lack the flexibility and reusability of more advanced programming paradigms.
// Functional Programming
// -----------------------
// Functional programming is like using a set of building blocks that are like mathematical functions. This helps in making your code easier to understand and less likely to have bugs.
// Declaretive Programming
// ------------------------
// Declarative programming is an approach to writing computer programs that focuses on describing the desired outcome or result, rather than explicitly specifying the step-by-step instructions to achieve that outcome. In declarative programming, you define what you want to accomplish, and the underlying system or framework figures out how to achieve.
// Object Oriented Programming
// -----------------------------
// Object-Oriented Programming (OOP) is a programming paradigm that organizes code around objects, which are instances of classes defining data and behavior. In OOP, software is designed by modeling real-world entities as objects, each having attributes (data) and methods (functions) that operate on the data.
// Event Driven Programming
// --------------------------
// Event-driven programming is a programming paradigm that revolves around responding to events or signals generated by the system or user interactions. In event-driven programming, software is designed to wait for and react to events, such as user clicks, keyboard inputs, or system notifications.
